[Unit]
Description=Run Next-Boot-OS Script on TTY %i
# Make sure we are started after logins are permitted. If Plymouth is
# used, we want to start when it is on its way out.
After=systemd-user-sessions.service plymouth-quit-wait.service
# Wait for network to be online
Wants=network-online.target
After=network-online.target
# On systems without virtual consoles, do not start.
ConditionPathExists=/dev/tty0
# D-Bus is necessary for contacting logind, which is required.
Wants=dbus.socket systemd-logind.service
After=dbus.socket systemd-logind.service
# Replace any (a)getty that may have spawned, since we log in
# automatically.
Conflicts=getty@%i.service
After=getty@%i.service

[Service]
Type=simple
ExecStart=/bin/bash /opt/scripts/Next-Boot-OS.sh
Restart=always
RestartSec=1
User=root
# Log this user with utmp, letting it show up with commands 'w' and
# 'who'. This is needed since we replace (a)getty.
UtmpIdentifier=%i
UtmpMode=user
# A virtual terminal is needed.
TTYPath=/dev/%I
TTYReset=yes
TTYVHangup=yes
TTYVTDisallocate=yes
# Fail to start if not controlling the virtual terminal.
StandardInput=tty-fail
StandardOutput=tty-fail
StandardError=tty-fail

# Security hardening - Because our script does not need many permissions at all but root is required.
NoNewPrivileges=yes
CapabilityBoundingSet=CAP_SYS_BOOT CAP_DAC_READ_SEARCH
AmbientCapabilities=CAP_SYS_BOOT CAP_DAC_READ_SEARCH
PrivateTmp=yes
ProtectSystem=full
ProtectHome=read-only
ProtectKernelModules=yes
ProtectKernelTunables=yes
RestrictAddressFamilies=AF_UNIX AF_INET AF_INET6
MemoryDenyWriteExecute=yes
PrivateDevices=yes
RestrictNamespaces=yes
SystemCallFilter=~@clock @debug @keyring @module @mount @obsolete @proc @raw-io
RestrictRealtime=yes
RestrictSUIDSGID=yes

[Install]
WantedBy=multi-user.target
DefaultInstance=tty2